"""empty message

Revision ID: 6e67d1cb57cf
Revises: 
Create Date: 2022-12-24 11:59:51.736120

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

from models.session import create_partition

# revision identifiers, used by Alembic.
revision = '6e67d1cb57cf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('pk', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('pk'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('pk', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('pk')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('roles_users',
    sa.Column('user_pk', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('role_pk', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['role_pk'], ['roles.pk'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_pk'], ['users.pk'], ondelete='CASCADE')
    )
    op.create_table('sessions',
    sa.Column('pk', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('event_date', sa.DateTime(), nullable=True),
    sa.Column('user_pk', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('user_device_type', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['user_pk'], ['users.pk'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pk', 'user_device_type'),
    sa.UniqueConstraint('pk', 'user_device_type'),
    postgresql_partition_by='LIST (user_device_type)',
    listeners=[('after_create', create_partition)]
    )
    op.create_table('social_account',
    sa.Column('pk', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_pk', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('social_id', sa.Text(), nullable=False),
    sa.Column('social_name', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['user_pk'], ['users.pk'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pk'),
    sa.UniqueConstraint('social_id', 'social_name', name='social_pk')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('social_account')
    op.drop_table('sessions')
    op.drop_table('roles_users')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
